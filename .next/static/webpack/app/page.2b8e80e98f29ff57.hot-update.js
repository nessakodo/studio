"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/ThinkingUniverse.tsx":
/*!*********************************************!*\
  !*** ./app/components/ThinkingUniverse.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ThinkingUniverse)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls */ \"(app-pages-browser)/./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction ThinkingUniverse() {\n    _s();\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThinkingUniverse.useEffect\": ()=>{\n            if (!mountRef.current) return;\n            // Scene setup\n            const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n            const renderer = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer({\n                antialias: true,\n                alpha: true\n            });\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            renderer.setPixelRatio(window.devicePixelRatio);\n            mountRef.current.appendChild(renderer.domElement);\n            // Define our main concept nodes\n            const mainNodes = [\n                {\n                    position: new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 0, 0),\n                    size: 2,\n                    color: new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x4ade80),\n                    label: \"Thinking\",\n                    isMainNode: true,\n                    subNodes: [\n                        {\n                            position: new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(5, 3, 0),\n                            size: 1.5,\n                            color: new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x94a3b8),\n                            label: \"Security\",\n                            content: \"Our approach to security combines cutting-edge technology with human-centered design principles.\"\n                        },\n                        {\n                            position: new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(-5, 3, 0),\n                            size: 1.5,\n                            color: new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x86efac),\n                            label: \"Innovation\",\n                            content: \"Pushing boundaries while maintaining stability and security in every solution we create.\"\n                        },\n                        {\n                            position: new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, -5, 0),\n                            size: 1.5,\n                            color: new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x4ade80),\n                            label: \"Future\",\n                            content: \"Building systems that are not just for today, but ready for tomorrow's challenges.\"\n                        }\n                    ]\n                }\n            ];\n            // Create particles with improved distribution\n            const particlesGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BufferGeometry();\n            const particleCount = 5000;\n            const positions = new Float32Array(particleCount * 3);\n            const colors = new Float32Array(particleCount * 3);\n            const sizes = new Float32Array(particleCount);\n            for(let i = 0; i < particleCount; i++){\n                const radius = 60 * (0.75 + Math.random() * 0.5);\n                const theta = Math.random() * Math.PI * 2;\n                const phi = Math.acos(2 * Math.random() - 1);\n                positions[i * 3] = radius * Math.sin(phi) * Math.cos(theta);\n                positions[i * 3 + 1] = radius * Math.sin(phi) * Math.sin(theta);\n                positions[i * 3 + 2] = radius * Math.cos(phi);\n                // Enhanced color distribution for holographic effect\n                const colorMix = Math.random();\n                colors[i * 3] = 0.1 + colorMix * 0.05 // R\n                ;\n                colors[i * 3 + 1] = 0.4 + colorMix * 0.1 // G\n                ;\n                colors[i * 3 + 2] = 0.3 + colorMix * 0.05 // B\n                ;\n                // Varying particle sizes\n                sizes[i] = Math.random() * 0.15 + 0.05;\n            }\n            particlesGeometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(positions, 3));\n            particlesGeometry.setAttribute('color', new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(colors, 3));\n            particlesGeometry.setAttribute('size', new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(sizes, 1));\n            const particlesMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.PointsMaterial({\n                size: 0.1,\n                vertexColors: true,\n                transparent: true,\n                opacity: 0.4,\n                sizeAttenuation: true,\n                blending: three__WEBPACK_IMPORTED_MODULE_2__.AdditiveBlending\n            });\n            const particles = new three__WEBPACK_IMPORTED_MODULE_2__.Points(particlesGeometry, particlesMaterial);\n            scene.add(particles);\n            // Create node meshes\n            const createNodeMesh = {\n                \"ThinkingUniverse.useEffect.createNodeMesh\": (node)=>{\n                    const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(node.size, 32, 32);\n                    const material = new three__WEBPACK_IMPORTED_MODULE_2__.MeshPhongMaterial({\n                        color: node.color,\n                        transparent: true,\n                        opacity: 0.6,\n                        shininess: 100,\n                        specular: new three__WEBPACK_IMPORTED_MODULE_2__.Color(0xffffff)\n                    });\n                    const mesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geometry, material);\n                    mesh.position.copy(node.position);\n                    mesh.userData = {\n                        ...node\n                    };\n                    return mesh;\n                }\n            }[\"ThinkingUniverse.useEffect.createNodeMesh\"];\n            const nodeMeshes = [];\n            const createNodes = {\n                \"ThinkingUniverse.useEffect.createNodes\": (nodes)=>{\n                    nodes.forEach({\n                        \"ThinkingUniverse.useEffect.createNodes\": (node)=>{\n                            const mesh = createNodeMesh(node);\n                            scene.add(mesh);\n                            nodeMeshes.push(mesh);\n                            if (node.subNodes) {\n                                createNodes(node.subNodes);\n                            }\n                        }\n                    }[\"ThinkingUniverse.useEffect.createNodes\"]);\n                }\n            }[\"ThinkingUniverse.useEffect.createNodes\"];\n            createNodes(mainNodes);\n            // Enhanced lighting\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xffffff, 0.1);\n            scene.add(ambientLight);\n            const pointLight1 = new three__WEBPACK_IMPORTED_MODULE_2__.PointLight(0x4ade80, 0.3);\n            pointLight1.position.set(10, 10, 10);\n            scene.add(pointLight1);\n            const pointLight2 = new three__WEBPACK_IMPORTED_MODULE_2__.PointLight(0x94a3b8, 0.2);\n            pointLight2.position.set(-10, -10, -10);\n            scene.add(pointLight2);\n            camera.position.z = 65;\n            // Enhanced controls\n            const controls = new three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_4__.OrbitControls(camera, renderer.domElement);\n            controls.enableDamping = true;\n            controls.dampingFactor = 0.05;\n            controls.rotateSpeed = 0.15;\n            controls.enableZoom = false;\n            controls.autoRotate = true;\n            controls.autoRotateSpeed = 0.1;\n            // Animation\n            let animationId;\n            const animate = {\n                \"ThinkingUniverse.useEffect.animate\": ()=>{\n                    animationId = requestAnimationFrame(animate);\n                    const time = Date.now() * 0.001;\n                    // Smooth particle rotation with varying speeds\n                    particles.rotation.y += 0.0001;\n                    particles.rotation.x += 0.00005;\n                    // Node animations\n                    nodeMeshes.forEach({\n                        \"ThinkingUniverse.useEffect.animate\": (mesh, index)=>{\n                            const nodeData = mesh.userData;\n                            if (!nodeData.isMainNode) {\n                                // Orbital motion\n                                const orbitRadius = 8;\n                                const orbitSpeed = 0.2;\n                                const orbitOffset = index * Math.PI / 3;\n                                mesh.position.x = Math.cos(time * orbitSpeed + orbitOffset) * orbitRadius;\n                                mesh.position.z = Math.sin(time * orbitSpeed + orbitOffset) * orbitRadius;\n                                // Subtle floating motion\n                                mesh.position.y += Math.sin(time + index) * 0.0005;\n                            }\n                            // Gentle rotation\n                            mesh.rotation.y += 0.002;\n                        }\n                    }[\"ThinkingUniverse.useEffect.animate\"]);\n                    // Dynamic particle movement\n                    const positions = particles.geometry.attributes.position.array;\n                    for(let i = 0; i < positions.length; i += 3){\n                        const y = positions[i + 1];\n                        positions[i + 1] += Math.sin(time + i * 0.01) * 0.01;\n                    }\n                    particles.geometry.attributes.position.needsUpdate = true;\n                    controls.update();\n                    renderer.render(scene, camera);\n                }\n            }[\"ThinkingUniverse.useEffect.animate\"];\n            animate();\n            // Handle resize\n            const handleResize = {\n                \"ThinkingUniverse.useEffect.handleResize\": ()=>{\n                    camera.aspect = window.innerWidth / window.innerHeight;\n                    camera.updateProjectionMatrix();\n                    renderer.setSize(window.innerWidth, window.innerHeight);\n                }\n            }[\"ThinkingUniverse.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            return ({\n                \"ThinkingUniverse.useEffect\": ()=>{\n                    var _mountRef_current;\n                    window.removeEventListener('resize', handleResize);\n                    cancelAnimationFrame(animationId);\n                    (_mountRef_current = mountRef.current) === null || _mountRef_current === void 0 ? void 0 : _mountRef_current.removeChild(renderer.domElement);\n                    controls.dispose();\n                }\n            })[\"ThinkingUniverse.useEffect\"];\n        }\n    }[\"ThinkingUniverse.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 pointer-events-none\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            ref: mountRef,\n            className: \"absolute inset-0\"\n        }, void 0, false, {\n            fileName: \"/Users/nessakodo/studio/app/components/ThinkingUniverse.tsx\",\n            lineNumber: 222,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/nessakodo/studio/app/components/ThinkingUniverse.tsx\",\n        lineNumber: 221,\n        columnNumber: 5\n    }, this);\n}\n_s(ThinkingUniverse, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThinkingUniverse;\nvar _c;\n$RefreshReg$(_c, \"ThinkingUniverse\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/ThinkingUniverse.tsx\n"));

/***/ })

});